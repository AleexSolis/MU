# Dockerfile simplificado - Solo Admin Panel con nginx
FROM mcr.microsoft.com/dotnet/aspnet:9.0-alpine AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 44405

FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:9.0-alpine AS build
WORKDIR /src
COPY ["src/Startup/MUnique.OpenMU.Startup.csproj", "src/Startup/"]
RUN dotnet restore "src/Startup/MUnique.OpenMU.Startup.csproj"
COPY . .
WORKDIR "/src/src/Startup"
RUN dotnet build "MUnique.OpenMU.Startup.csproj" -c Release -o /app/build -p:ci=true
RUN dotnet publish "MUnique.OpenMU.Startup.csproj" -c Release -o /app/publish -p:ci=true

FROM nginx:alpine AS final

# Instalar .NET runtime y herramientas
RUN apk add --no-cache dotnet9-runtime aspnetcore9-runtime netcat-openbsd

# Copiar aplicación
WORKDIR /app
COPY --from=build /app/publish .
RUN mkdir /app/logs && chmod 777 /app/logs

# Copiar configuración nginx
COPY nginx.conf /etc/nginx/nginx.conf

# Variables de entorno para monolito completo
ENV ASPNETCORE_URLS=http://+:8080
ENV ASPNETCORE_ENVIRONMENT=Production
ENV OPENMU_GAMESERVER_ENABLED=true
ENV OPENMU_CONNECTSERVER_ENABLED=true
ENV OPENMU_ADMINPANEL_ENABLED=true
ENV RESOLVE_IP=0.0.0.0
ENV GAMESERVER_PORT=44405
ENV GAMESERVER_BIND_IP=0.0.0.0

# Script de inicio simplificado
RUN echo '#!/bin/sh' > /start.sh && \
    echo 'set -e' >> /start.sh && \
    echo 'echo "Starting OpenMU Monolito Completo..."' >> /start.sh && \
    echo 'cd /app' >> /start.sh && \
    echo 'dotnet MUnique.OpenMU.Startup.dll &' >> /start.sh && \
    echo 'for i in $(seq 1 30); do' >> /start.sh && \
    echo '    if nc -z localhost 8080 2>/dev/null; then' >> /start.sh && \
    echo '        echo "Admin Panel is ready"' >> /start.sh && \
    echo '        break' >> /start.sh && \
    echo '    fi' >> /start.sh && \
    echo '    sleep 2' >> /start.sh && \
    echo 'done' >> /start.sh && \
    echo 'echo "Starting nginx..."' >> /start.sh && \
    echo 'nginx -g "daemon off;"' >> /start.sh

RUN chmod +x /start.sh

EXPOSE 80
EXPOSE 44405

CMD ["/start.sh"]
